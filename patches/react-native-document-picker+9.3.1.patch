diff --git a/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java b/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java
index 5001525..374290f 100644
--- a/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java
+++ b/node_modules/react-native-document-picker/android/src/main/java/com/reactnativedocumentpicker/RNDocumentPickerModule.java
@@ -18,7 +18,8 @@ import androidx.annotation.NonNull;
 import com.facebook.react.bridge.ActivityEventListener;
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.BaseActivityEventListener;
-import com.facebook.react.bridge.GuardedResultAsyncTask;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContext;
@@ -223,28 +224,53 @@ public class RNDocumentPickerModule extends NativeDocumentPickerSpec {
         return;
       }
 
-      new ProcessDataTask(getReactApplicationContext(), uris, copyTo, promise).execute();
+      new ProcessDataTask(getReactApplicationContext(), uris, copyTo, promise).executeOnExecutor();
     } catch (Exception e) {
       sendError(E_UNEXPECTED_EXCEPTION, e.getLocalizedMessage(), e);
     }
   }
 
-  private static class ProcessDataTask extends GuardedResultAsyncTask<ReadableArray> {
+  private static class ProcessDataTask {
     private final WeakReference<Context> weakContext;
     private final List<Uri> uris;
     private final String copyTo;
     private final Promise promise;
+    private static final ExecutorService executor = Executors.newCachedThreadPool();
 
-    protected ProcessDataTask(ReactContext reactContext, List<Uri> uris, String copyTo, Promise promise) {
-      super(reactContext.getExceptionHandler());
-      this.weakContext = new WeakReference<>(reactContext.getApplicationContext());
+    protected ProcessDataTask(Context context, List<Uri> uris, String copyTo, Promise promise) {
+      this.weakContext = new WeakReference<>(context);
       this.uris = uris;
       this.copyTo = copyTo;
       this.promise = promise;
     }
 
-    @Override
-    protected ReadableArray doInBackgroundGuarded() {
+    public void executeOnExecutor() {
+      executor.execute(new Runnable() {
+        @Override
+        public void run() {
+          try {
+            ReadableArray result = doInBackground();
+            android.os.Handler mainHandler = new android.os.Handler(android.os.Looper.getMainLooper());
+            mainHandler.post(new Runnable() {
+              @Override
+              public void run() {
+                onPostExecute(result);
+              }
+            });
+          } catch (Exception e) {
+            android.os.Handler mainHandler = new android.os.Handler(android.os.Looper.getMainLooper());
+            mainHandler.post(new Runnable() {
+              @Override
+              public void run() {
+                promise.reject("UNKNOWN_ERROR", e.getMessage(), e);
+              }
+            });
+          }
+        }
+      });
+    }
+
+    protected ReadableArray doInBackground() {
       WritableArray results = Arguments.createArray();
       for (Uri uri : uris) {
         results.pushMap(getMetadata(uri));
@@ -252,8 +278,7 @@ public class RNDocumentPickerModule extends NativeDocumentPickerSpec {
       return results;
     }
 
-    @Override
-    protected void onPostExecuteGuarded(ReadableArray readableArray) {
+    protected void onPostExecute(ReadableArray readableArray) {
       promise.resolve(readableArray);
     }
 
